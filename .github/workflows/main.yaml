name: CI

on:
  push:
    # Build on tags that look like releases
    tags:
      - v*
    # Build when main or testing is pushed to
    branches:
      - main

jobs:
  nosetests-linux:
    name: Run pytest on Linux
    runs-on: "ubuntu-latest"
    defaults:
      run:
        shell: bash -l {0}
    steps:
    - uses: actions/checkout@v2
    - uses: conda-incubator/setup-miniconda@v2
      with:
        python-version: 3.7
        mamba-version: "*"
        channels: conda-forge,cantera/label/dev,defaults
        channel-priority: true
        activate-environment: ctwrap
        environment-file: environment.yml
        #auto-activate-base: false
    - name: Check conda status
      run: |
        conda info
        conda list
    - name: Install ctwrap
      run: |
        pip install -e .
    - name: Run pytest
      run: pytest
    - name: Get coverage
      run: coverage report

  nosetests-win:
    name: Run pytest on Windows
    runs-on: "windows-latest"
    defaults:
      run:
        shell: bash -l {0}
    steps:
    - uses: actions/checkout@v2
    - uses: conda-incubator/setup-miniconda@v2
      with:
        python-version: 3.7
        mamba-version: "*"
        channels: conda-forge,cantera/label/dev,defaults
        channel-priority: true
        activate-environment: ctwrap
        environment-file: environment.yml
        #auto-activate-base: false
    - name: Check conda status
      run: |
        conda info
        conda list
    - name: Install ctwrap
      run: |
        pip install -e .
    - name: Run pytest
      run: pytest

  sphinx-docs:
    name: Check sphinx docs on Linux
    runs-on: "ubuntu-latest"
    defaults:
      run:
        shell: bash -l {0}
    steps:
    - uses: actions/checkout@v2
    - uses: conda-incubator/setup-miniconda@v2
      with:
        python-version: 3.7
        mamba-version: "*"
        channels: conda-forge,cantera/label/dev,defaults
        channel-priority: true
        activate-environment: ctwrap
        environment-file: environment.yml
    - name: Install ctwrap
      run: |
        pip install -e .
    - name: Install Sphinx dependencies
      run: |
        cd docs
        pip install -r requirements.txt
        sphinx-build -b html . _build
    - name: Create artifact of the html output
      uses: actions/upload-artifact@v2
      with:
        name: DocumentationHTML
        path: docs/_build/

  # nosetests-mac:
  #   name: OSX
  #   runs-on: "macos-latest"
